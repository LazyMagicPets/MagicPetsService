openapi: 3.0.1
paths:
  # Test/Util
  '/{prefix}/callerInfo':
    get:
      operationId: callerInfo
      responses:
        '200':
          description: successful operation
          content:
            text/plain:
              schema:
                type: string

  # TestEmployee
  '/{prefix}/test':
    get:
      summary: Test
      operationId: testEmployee
      x-lz-gencall: Task.FromResult("Hello World")
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: string
        '206':
          description: successful operation, partial return
          content:
            application/json:
              schema:
                type: string

  # Pet
  '/{prefix}/pet':
    post:
      summary: Add a new pet to the store
      operationId: addPet
      x-lz-gencall: petRepo.CreateAsync(callerInfo, body)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '405':
          description: Invalid input
    put:
      summary: Update an existing pet
      operationId: updatePet
      x-lz-gencall: petRepo.UpdateAsync(callerInfo, body)   
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '405':
          description: Validation exception


  '/{prefix}/pet/{petId}':
    delete:
      summary: Deletes a pet
      operationId: deletePet
      x-lz-gencall: petRepo.DeleteAsync(callerInfo, petId)    
      parameters:
      - name: petId
        in: path
        description: Pet id to delete
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found

  # Inventory
  '/{prefix}/order/inventory':
    get:
      summary: Returns pet inventories by status
      description: Returns a map of status codes to quantities
      operationId: getInventory
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: integer
                  format: int32
  # Order
  '/{prefix}/order':
    post:
      summary: Place an order for a pet
      operationId: placeOrder
      x-lz-gencall: orderRepo.CreateAsync(callerInfo, body)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
        description: order placed for purchasing the pet
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid Order

  '/{prefix}/order/{orderId}':
    get:
      summary: Find purchase order by ID
      description: >-
        For valid response try integer IDs with value >= 1 and <= 10.\ \ Other values will generated exceptions
      operationId: getOrderById
      x-lz-gencall: orderRepo.ReadAsync(callerInfo, orderId)  
      parameters:
      - name: orderId
        in: path
        description: ID of pet that needs to be fetched
        required: true
        schema:
          type: string
          minimum: 1
          maximum: 10
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found
    delete:
      summary: Delete purchase order by ID
      operationId: deleteOrder
      x-lz-gencall: orderRepo.DeleteAsync(callerInfo, orderId)  
      parameters:
      - name: orderId
        in: path
        description: ID of the order that needs to be deleted
        required: true
        schema:
          type: string
      responses: 
        '200':
          description: Success
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found



